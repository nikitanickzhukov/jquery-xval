{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$","defaults","event","args","fn","extend","xval","value","options","arguments","undefined","TypeError","this","is","select","get","prop","Array","values","isChanged","toString","_i","option","val","isEqual","selected","trigger","apply","concat","_toConsumableArray","_value","_i2","_option","push","idx","_i3","_option2","_val","_isEqual","selectedIndex","_i4","input","_val2","_isEqual2","checked","_eq","eq","_i5","_input","_values","_i6","_i7","_input2","_val3","_isEqual3","_eq2","_value2","_i8","_input3","_input4","jQuery"],"mappings":"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","file":"../jquery.xval.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\n/* global jQuery */\n\n(function($) {\n    let defaults = {\n        event: 'change',\n        args: []\n    };\n\n    $.fn.extend({\n        xval: function(value, options) {\n            if (arguments.length && (value === undefined || value === null)) {\n                throw new TypeError(`Unsupportable value: ${value}`);\n            }\n\n            options = $.extend({}, defaults, options);\n\n            if (this.is('select')) {\n                // Select mode\n\n                let select = this.get(0);\n\n                if (this.prop('multiple')) {\n                    // Multiple mode\n\n                    if (arguments.length) {\n                        // Setting mode\n\n                        if (!(value instanceof Array)) {\n                            value = [value];\n                        }\n\n                        let values = {},\n                            isChanged = false;\n\n                        for (let i = 0; i < value.length; i ++) {\n                            if (typeof value[i] !== 'string') {\n                                value[i] = value[i].toString();\n                            }\n                            values[value[i]] = true;\n                        }\n\n                        for (let i = 0; i < select.options.length; i ++) {\n                            let option = select.options[i],\n                                val = option.value,\n                                isEqual = !!values[val];\n\n                            if (option.selected !== isEqual) {\n                                option.selected = isEqual;\n                                isChanged = true;\n                            }\n                        }\n\n                        if (isChanged && options.event) {\n                            this.trigger(options.event, ...options.args);\n                        }\n\n                        return this;\n                    } else {\n                        // Getting mode\n\n                        let value = [];\n\n                        for (let i = 0; i < select.options.length; i ++) {\n                            let option = select.options[i];\n\n                            if (option.selected) {\n                                value.push(option.value);\n                            }\n                        }\n\n                        return value;\n                    }\n                } else {\n                    // Single mode\n\n                    if (arguments.length) {\n                        // Setting mode\n\n                        if (typeof value !== 'string') {\n                            value = value.toString();\n                        }\n\n                        let idx = -1;\n\n                        for (let i = 0; i < select.options.length; i ++) {\n                            let option = select.options[i],\n                                val = option.value,\n                                isEqual = (val === value);\n\n                            if (isEqual) {\n                                idx = i;\n                                break;\n                            }\n                        }\n\n                        if (idx !== select.selectedIndex) {\n                            select.selectedIndex = idx;\n\n                            if (options.event) {\n                                this.trigger(options.event, ...options.args);\n                            }\n                        }\n\n                        return this;\n                    } else {\n                        // Getting mode\n\n                        if (select.selectedIndex !== -1) {\n                            return select.options[select.selectedIndex].value;\n                        } else {\n                            return undefined;\n                        }\n                    }\n                }\n            } else if (this.is('input:radio')) {\n                // Radio mode\n\n                if (arguments.length) {\n                    // Setting mode\n\n                    if (typeof value !== 'string') {\n                        value = value.toString();\n                    }\n\n                    for (let i = 0; i < this.length; i ++) {\n                        let input = this.get(i),\n                            val = input.value,\n                            isEqual = (val === value);\n\n                        if (input.checked !== isEqual) {\n                            input.checked = isEqual;\n\n                            if (isEqual && options.event) {\n                                this.eq(i).trigger(options.event, ...options.args);\n                            }\n                        }\n                    }\n\n                    return this;\n                } else {\n                    // Getting mode\n\n                    for (let i = 0; i < this.length; i ++) {\n                        let input = this.get(i);\n\n                        if (input.checked) {\n                            return input.value;\n                        }\n                    }\n\n                    return undefined;\n                }\n            } else if (this.is('input:checkbox')) {\n                // Checkbox mode\n\n                if (arguments.length) {\n                    // Setting mode\n\n                    if (!(value instanceof Array)) {\n                        value = [value];\n                    }\n\n                    let values = {};\n\n                    for (let i = 0; i < value.length; i ++) {\n                        if (typeof value[i] !== 'string') {\n                            value[i] = value[i].toString();\n                        }\n                        values[value[i]] = true;\n                    }\n\n                    for (let i = 0; i < this.length; i ++) {\n                        let input = this.get(i),\n                            val = input.value,\n                            isEqual = !!values[val];\n\n                        if (input.checked !== isEqual) {\n                            input.checked = isEqual;\n\n                            if (isEqual && options.event) {\n                                this.eq(i).trigger(options.event, ...options.args);\n                            }\n                        }\n                    }\n\n                    return this;\n                } else {\n                    // Getting mode\n\n                    let value = [];\n\n                    for (let i = 0; i < this.length; i ++) {\n                        let input = this.get(i);\n\n                        if (input.checked) {\n                            value.push(input.value);\n                        }\n                    }\n\n                    return value;\n                }\n            } else {\n                // Input mode\n\n                let input = this.get(0);\n\n                if (arguments.length) {\n                    // Setting mode\n\n                    if (typeof value !== 'string') {\n                        value = value.toString();\n                    }\n\n                    if (input.value !== value) {\n                        input.value = value;\n\n                        if (options.event) {\n                            this.trigger(options.event, ...options.args);\n                        }\n                    }\n\n                    return this;\n                } else {\n                    // Getting mode\n\n                    return input.value;\n                }\n            }\n        }\n    });\n})(jQuery);\n"]}
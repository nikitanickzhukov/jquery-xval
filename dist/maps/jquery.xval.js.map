{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$","defaults","jQuery","event","args","fn","extend","xval","value","options","arguments","TypeError","this","is","select","get","prop","Array","values","isChanged","toString","_i","option","isEqual","selected","trigger","apply","concat","_toConsumableArray","_value","_i2","_option","push","idx","_i3","selectedIndex","_values","_i6","_i7","_eq2","_input2","_isEqual3","checked","eq","_value2","_i8","_input3","_input4","_i4","_eq","input","_isEqual2","_i5","_input"],"mappings":"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","file":"../jquery.xval.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\n/* global jQuery */\n\n(function($) {\n    let defaults = {\n        event: 'change',\n        args: []\n    };\n\n    $.fn.extend({\n        xval: function(value, options) {\n            if (arguments.length && (value === undefined || value === null)) {\n                throw new TypeError(`Unsupportable value: ${value}`);\n            }\n\n            options = $.extend({}, defaults, options);\n\n            if (this.is('select')) {\n                // Select mode\n\n                let select = this.get(0);\n\n                if (this.prop('multiple')) {\n                    // Multiple mode\n\n                    if (arguments.length) {\n                        // Setting mode\n\n                        if (!(value instanceof Array)) {\n                            value = [value];\n                        }\n\n                        let values = {},\n                            isChanged = false;\n\n                        for (let i = 0; i < value.length; i ++) {\n                            if (typeof value[i] !== 'string') {\n                                value[i] = value[i].toString();\n                            }\n                            values[value[i]] = true;\n                        }\n\n                        for (let i = 0; i < select.options.length; i ++) {\n                            let option = select.options[i],\n                                val = option.value,\n                                isEqual = !!values[val];\n\n                            if (option.selected !== isEqual) {\n                                option.selected = isEqual;\n                                isChanged = true;\n                            }\n                        }\n\n                        if (isChanged && options.event) {\n                            this.trigger(options.event, ...options.args);\n                        }\n\n                        return this;\n                    } else {\n                        // Getting mode\n\n                        let value = [];\n\n                        for (let i = 0; i < select.options.length; i ++) {\n                            let option = select.options[i];\n\n                            if (option.selected) {\n                                value.push(option.value);\n                            }\n                        }\n\n                        return value;\n                    }\n                } else {\n                    // Single mode\n\n                    if (arguments.length) {\n                        // Setting mode\n\n                        if (typeof value !== 'string') {\n                            value = value.toString();\n                        }\n\n                        let idx = -1;\n\n                        for (let i = 0; i < select.options.length; i ++) {\n                            let option = select.options[i],\n                                val = option.value,\n                                isEqual = (val === value);\n\n                            if (isEqual) {\n                                idx = i;\n                                break;\n                            }\n                        }\n\n                        if (idx !== select.selectedIndex) {\n                            select.selectedIndex = idx;\n\n                            if (options.event) {\n                                this.trigger(options.event, ...options.args);\n                            }\n                        }\n\n                        return this;\n                    } else {\n                        // Getting mode\n\n                        if (select.selectedIndex !== -1) {\n                            return select.options[select.selectedIndex].value;\n                        } else {\n                            return undefined;\n                        }\n                    }\n                }\n            } else if (this.is('input:radio')) {\n                // Radio mode\n\n                if (arguments.length) {\n                    // Setting mode\n\n                    if (typeof value !== 'string') {\n                        value = value.toString();\n                    }\n\n                    for (let i = 0; i < this.length; i ++) {\n                        let input = this.get(i),\n                            val = input.value,\n                            isEqual = (val === value);\n\n                        if (input.checked !== isEqual) {\n                            input.checked = isEqual;\n\n                            if (isEqual && options.event) {\n                                this.eq(i).trigger(options.event, ...options.args);\n                            }\n                        }\n                    }\n\n                    return this;\n                } else {\n                    // Getting mode\n\n                    for (let i = 0; i < this.length; i ++) {\n                        let input = this.get(i);\n\n                        if (input.checked) {\n                            return input.value;\n                        }\n                    }\n\n                    return undefined;\n                }\n            } else if (this.is('input:checkbox')) {\n                // Checkbox mode\n\n                if (arguments.length) {\n                    // Setting mode\n\n                    if (!(value instanceof Array)) {\n                        value = [value];\n                    }\n\n                    let values = {};\n\n                    for (let i = 0; i < value.length; i ++) {\n                        if (typeof value[i] !== 'string') {\n                            value[i] = value[i].toString();\n                        }\n                        values[value[i]] = true;\n                    }\n\n                    for (let i = 0; i < this.length; i ++) {\n                        let input = this.get(i),\n                            val = input.value,\n                            isEqual = !!values[val];\n\n                        if (input.checked !== isEqual) {\n                            input.checked = isEqual;\n\n                            if (isEqual && options.event) {\n                                this.eq(i).trigger(options.event, ...options.args);\n                            }\n                        }\n                    }\n\n                    return this;\n                } else {\n                    // Getting mode\n\n                    let value = [];\n\n                    for (let i = 0; i < this.length; i ++) {\n                        let input = this.get(i);\n\n                        if (input.checked) {\n                            value.push(input.value);\n                        }\n                    }\n\n                    return value;\n                }\n            } else {\n                // Input mode\n\n                let input = this.get(0);\n\n                if (arguments.length) {\n                    // Setting mode\n\n                    if (typeof value !== 'string') {\n                        value = value.toString();\n                    }\n\n                    if (input.value !== value) {\n                        input.value = value;\n\n                        if (options.event) {\n                            this.trigger(options.event, ...options.args);\n                        }\n                    }\n\n                    return this;\n                } else {\n                    // Getting mode\n\n                    return input.value;\n                }\n            }\n        }\n    });\n})(jQuery);\n"]}